const { createClient } = require('@supabase/supabase-js');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞ –Ω–æ–≤–∞—Ç–∞ –±–∞–∑–∞
const SUPABASE_URL = 'https://riwmzezepflpnemylnyr.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJpd216ZXplcGZscG5lbXlsbnlyIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE2NjA0NDQsImV4cCI6MjA2NzIzNjQ0NH0.oWmpFAKAPT5QjVrpCZw0-kgZUtFBNVdM8GqoEtsv-qU';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–æ–≤–∞—Ç–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω–∏...\n');
  console.log(`üìç URL: ${SUPABASE_URL}`);
  console.log(`üîë Anon Key: ${SUPABASE_ANON_KEY.substring(0, 20)}...`);
  console.log('');
  
  // –°–ø–∏—Å—ä–∫ –Ω–∞ –æ—á–∞–∫–≤–∞–Ω–∏—Ç–µ —Ç–∞–±–ª–∏—Ü–∏
  const expectedTables = [
    'admin_profile',
    'admin_settings', 
    'customers',
    'bookings',
    'payments',
    'invoices',
    'day_off_periods',
    'activity_log',
    'pricing_cards',
    'gallery_sections',
    'gallery',
    'reviews',
    'faq',
    'services',
    'admin_areas_cover'
  ];
  
  console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–≤–∞–Ω–µ –Ω–∞ —Ç–∞–±–ª–∏—Ü–∏...\n');
  
  let existingTables = [];
  let missingTables = [];
  
  for (const tableName of expectedTables) {
    try {
      const { data, error } = await supabase
        .from(tableName)
        .select('*')
        .limit(1);
      
      if (error) {
        if (error.code === 'PGRST116') {
          console.log(`‚ùå ${tableName} - –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞`);
          missingTables.push(tableName);
        } else {
          console.log(`‚ö†Ô∏è  ${tableName} - –≥—Ä–µ—à–∫–∞: ${error.message}`);
          missingTables.push(tableName);
        }
      } else {
        console.log(`‚úÖ ${tableName} - —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ (${data?.length || 0} –∑–∞–ø–∏—Å–∞)`);
        existingTables.push(tableName);
      }
    } catch (err) {
      console.log(`‚ùå ${tableName} - –Ω–µ–æ—á–∞–∫–≤–∞–Ω–∞ –≥—Ä–µ—à–∫–∞: ${err.message}`);
      missingTables.push(tableName);
    }
  }
  
  console.log('\n' + '='.repeat(50));
  console.log('üìä –û–ë–û–ë–©–ï–ù–ò–ï');
  console.log('='.repeat(50));
  console.log(`‚úÖ –°—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∏ —Ç–∞–±–ª–∏—Ü–∏: ${existingTables.length}/${expectedTables.length}`);
  console.log(`‚ùå –õ–∏–ø—Å–≤–∞—â–∏ —Ç–∞–±–ª–∏—Ü–∏: ${missingTables.length}/${expectedTables.length}`);
  
  if (existingTables.length > 0) {
    console.log('\n‚úÖ –ù–∞–º–µ—Ä–µ–Ω–∏ —Ç–∞–±–ª–∏—Ü–∏:');
    existingTables.forEach(table => console.log(`   - ${table}`));
  }
  
  if (missingTables.length > 0) {
    console.log('\n‚ùå –õ–∏–ø—Å–≤–∞—â–∏ —Ç–∞–±–ª–∏—Ü–∏:');
    missingTables.forEach(table => console.log(`   - ${table}`));
    
    console.log('\nüîß –ü–†–ï–ü–û–†–™–ö–ò:');
    console.log('1. –û—Ç–∏–¥–µ—Ç–µ –≤ Supabase Dashboard');
    console.log('2. –ò–∑–±–µ—Ä–µ—Ç–µ –ø—Ä–æ–µ–∫—Ç–∞ riwmzezepflpnemylnyr');
    console.log('3. –û—Ç–∏–¥–µ—Ç–µ –≤ SQL Editor');
    console.log('4. –ò–∑–ø—ä–ª–Ω–µ—Ç–µ SQL –∫–æ–¥–∞ –æ—Ç scripts/create-tables.js');
  } else {
    console.log('\nüéâ –í—Å–∏—á–∫–∏ —Ç–∞–±–ª–∏—Ü–∏ —Å–∞ –Ω–∞–ª–∏—á–Ω–∏! –ë–∞–∑–∞—Ç–∞ –µ –≥–æ—Ç–æ–≤–∞ –∑–∞ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ.');
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –º–æ–∂–µ–º –¥–∞ —Å—ä–∑–¥–∞–¥–µ–º –Ω–æ–≤–∞ —Ç–∞–±–ª–∏—Ü–∞
  console.log('\nüß™ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ write permissions...');
  try {
    const { error: testError } = await supabase
      .from('admin_profile')
      .insert({ 
        name: 'Test User',
        email: 'test@example.com',
        phone: '123456789',
        password: 'test'
      });
    
    if (testError) {
      console.log(`‚ö†Ô∏è  Write test failed: ${testError.message}`);
      if (testError.code === 'PGRST116') {
        console.log('   –¢–∞–±–ª–∏—Ü–∞—Ç–∞ admin_profile –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞');
      }
    } else {
      console.log('‚úÖ Write permissions —Ä–∞–±–æ—Ç—è—Ç');
      // –ò–∑—Ç—Ä–∏–≤–∞–º–µ —Ç–µ—Å—Ç–æ–≤–∏—è –∑–∞–ø–∏—Å
      await supabase
        .from('admin_profile')
        .delete()
        .eq('email', 'test@example.com');
    }
  } catch (err) {
    console.log(`‚ùå Write test error: ${err.message}`);
  }
}

// –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ
checkDatabase().catch(console.error); 