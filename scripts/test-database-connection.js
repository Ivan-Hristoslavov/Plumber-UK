const { createClient } = require('@supabase/supabase-js');

async function testDatabaseConnection() {
  console.log('üîç –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ –≤—Ä—ä–∑–∫–∞—Ç–∞ —Å Supabase –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏...\n');

  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ –∏–º–∞–º–µ environment variables
  const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
  const supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

  if (!supabaseUrl || !supabaseKey) {
    console.error('‚ùå –õ–∏–ø—Å–≤–∞—Ç environment variables:');
    console.error('   NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl ? '‚úÖ' : '‚ùå');
    console.error('   NEXT_PUBLIC_SUPABASE_ANON_KEY:', supabaseKey ? '‚úÖ' : '‚ùå');
    console.error('\n–ú–æ–ª—è, —Å—ä–∑–¥–∞–π—Ç–µ .env.local —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏.');
    return;
  }

  console.log('üìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
  console.log('   Supabase URL:', supabaseUrl);
  console.log('   Supabase Key:', supabaseKey.substring(0, 20) + '...');
  console.log('');

  try {
    // –°—ä–∑–¥–∞–≤–∞–º–µ Supabase –∫–ª–∏–µ–Ω—Ç
    const supabase = createClient(supabaseUrl, supabaseKey);

    console.log('üîå –û–ø–∏—Ç –∑–∞ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ...');

    // –¢–µ—Å—Ç–≤–∞–º–µ –≤—Ä—ä–∑–∫–∞—Ç–∞ —á—Ä–µ–∑ –ø—Ä–æ—Å—Ç query
    const { data: testData, error: testError } = await supabase
      .from('admin_profile')
      .select('id')
      .limit(1);

    if (testError) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ:', testError.message);
      
      if (testError.message.includes('relation "admin_profile" does not exist')) {
        console.log('üí° –¢–∞–±–ª–∏—Ü–∞—Ç–∞ admin_profile –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ - –±–∞–∑–∞—Ç–∞ –µ –ø—Ä–∞–∑–Ω–∞');
      }
      
      return;
    }

    console.log('‚úÖ –í—Ä—ä–∑–∫–∞—Ç–∞ –µ —É—Å–ø–µ—à–Ω–∞!');
    console.log('');

    // –ò–∑–≤–ª–∏—á–∞–º–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –±–∞–∑–∞—Ç–∞
    console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ —Ä–∞–∑–ª–∏—á–Ω–∏ —Ç–∞–±–ª–∏—Ü–∏
    const tables = [
      'admin_profile',
      'admin_settings', 
      'pricing_cards',
      'gallery',
      'gallery_sections',
      'reviews',
      'faq',
      'customers',
      'bookings',
      'invoices',
      'payments',
      'services',
      'areas'
    ];

    for (const table of tables) {
      try {
        const { count, error } = await supabase
          .from(table)
          .select('*', { count: 'exact', head: true });

        if (error) {
          console.log(`   ${table}: ‚ùå ${error.message}`);
        } else {
          console.log(`   ${table}: ‚úÖ ${count} –∑–∞–ø–∏—Å–∞`);
        }
      } catch (err) {
        console.log(`   ${table}: ‚ùå ${err.message}`);
      }
    }

    console.log('');

    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ —Ñ—É–Ω–∫—Ü–∏–∏
    console.log('üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏:');
    
    try {
      const { data: invoiceNumber, error: invoiceError } = await supabase
        .rpc('generate_invoice_number');

      if (invoiceError) {
        console.log('   generate_invoice_number: ‚ùå', invoiceError.message);
      } else {
        console.log('   generate_invoice_number: ‚úÖ', invoiceNumber);
      }
    } catch (err) {
      console.log('   generate_invoice_number: ‚ùå', err.message);
    }

    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏—Ç–µ
    console.log('');
    console.log('‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:');
    
    try {
      const { data: settings, error: settingsError } = await supabase
        .from('admin_settings')
        .select('*')
        .single();

      if (settingsError) {
        console.log('   admin_settings: ‚ùå', settingsError.message);
      } else {
        console.log('   admin_settings: ‚úÖ');
        console.log('      VAT Enabled:', settings.vat_enabled);
        console.log('      VAT Rate:', settings.vat_rate + '%');
        console.log('      Company Name:', settings.company_name);
      }
    } catch (err) {
      console.log('   admin_settings: ‚ùå', err.message);
    }

    // –ò–∑–≤–ª–∏—á–∞–º–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø—Ä–æ–µ–∫—Ç–∞ –æ—Ç URL
    const projectRef = supabaseUrl.match(/https:\/\/([^.]+)\.supabase\.co/)?.[1];
    if (projectRef) {
      console.log('');
      console.log('üèóÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø—Ä–æ–µ–∫—Ç–∞:');
      console.log('   Project Reference:', projectRef);
      console.log('   Database URL:', supabaseUrl);
      console.log('   Dashboard URL:', `https://supabase.com/dashboard/project/${projectRef}`);
    }

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –≥—Ä–µ—à–∫–∞:', error.message);
  }
}

// –ó–∞—Ä–µ–∂–¥–∞–º–µ environment variables
require('dotenv').config({ path: '.env.local' });

// –°—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ —Ç–µ—Å—Ç–∞
testDatabaseConnection(); 